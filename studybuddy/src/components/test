import React, { useState } from "react";
import {
  createUserWithEmailAndPassword,
  onAuthStateChanged,
  signOut,
} from "firebase/auth";
// import "./App.css";
import { auth, db } from "./firebase/firebase-config";
import { Alert, Card, Form, Button } from "react-bootstrap";

const SignUp = () => {
  const [registerEmail, setRegisterEmail] = useState("");
  const [registerPassword, setRegisterPassword] = useState("");
  const [Name, setName] = useState("");
  const [Univeristy, setUniversity] = useState("");
  const [Country, setCountry] = useState("");

  const [loading, setLoading] = useState(false);
  const [user, setUser] = useState({});
  const [error, setError] = useState("");

  onAuthStateChanged(auth, (currentUser) => {
    setUser(currentUser);
  });

  const register = async () => {
    try {
      setLoading(true);
      const user = await createUserWithEmailAndPassword(
        auth,
        registerEmail,
        registerPassword
      ).then((creds) => {
        db.collection("users").doc(creds.user.uid).set({
          name: Name,
          Country: Country,
          University: Univeristy,
        });
      });
    } catch (error) {
      setError("Unable to Sign Up");
    }
    setLoading(false);
  };

  const logout = async () => {
    await signOut(auth);
  };

  return (
    <>
      <Card>
        <Card.Body>
          <h2 className="text-center mb-4">Sign Up</h2>
          {error && <Alert variant="danger">{error}</Alert>}

          <Form onSubmit={register}>
            <Form.Group id="Name">
              <Form.Label>Name</Form.Label>
              <Form.Control
                type="text"
                onChange={(event) => {
                  setName(event.target.value);
                }}
                required
              />
            </Form.Group>
            <Form.Group id="University">
              <Form.Label>University</Form.Label>
              <Form.Control
                type="text"
                onChange={(event) => {
                  setUniversity(event.target.value);
                }}
                required
              />
            </Form.Group>
            <Form.Group id="Country">
              <Form.Label>Country</Form.Label>
              <Form.Control
                type="text"
                onChange={(event) => {
                  setCountry(event.target.value);
                }}
                required
              />
            </Form.Group>
            <Form.Group id="email">
              <Form.Label>Email</Form.Label>
              <Form.Control
                type="email"
                onChange={(event) => {
                  setRegisterEmail(event.target.value);
                }}
                required
              />
            </Form.Group>
            <Form.Group id="password">
              <Form.Label>Password</Form.Label>
              <Form.Control
                type="password"
                onChange={(event) => {
                  setRegisterPassword(event.target.value);
                }}
                required
              />
            </Form.Group>
            <Button disabled={loading} className="w-100" type="submit">
              Sign Up
            </Button>
            <Button onClick={logout} className="w-100" type="submit">
              Sign Out
            </Button>
          </Form>
        </Card.Body>
      </Card>
      <div className="w-100 text-center mt-2">
        Already have an account? <a href="#signin">Sign In</a>
      </div>
    </>
  );
};

export default SignUp;
